{
    "version": "https://jsonfeed.org/version/1",
    "title": "tdcq'Blog",
    "description": "记录自己技术博文",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2021/04/09/hexo-%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/",
            "url": "http://example.com/2021/04/09/hexo-%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/",
            "title": "hexo 本地图片不显示问题解决方案",
            "date_published": "2021-04-09T03:08:09.000Z",
            "content_html": "<h1 id=\"hexo-本地图片不显示\"><a class=\"markdownIt-Anchor\" href=\"#hexo-本地图片不显示\">#</a> hexo 本地图片不显示</h1>\n<blockquote>\n<p>1. 修改配置文件</p>\n</blockquote>\n<p>修改文件<font color=\"#E96B03\" size=\"4\" face=\"黑体\">_config.yml</font>里的<font color=\"#E96B03\" size=\"4\" face=\"黑体\">post_asset_folder:</font>这个选项设置为<font color=\"#E96B03\" size=\"4\" face=\"黑体\">true</font></p>\n<ul>\n<li>修改之后，再使用<font color=\"#E96B03\" size=\"4\" face=\"黑体\">hexo n &quot;hexo 本地图片不显示&quot;</font>时，目录的样子是</li>\n</ul>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\">hexo 本地图片不显示<br>   ├── <span class=\"hljs-number\">01</span>.<span class=\"hljs-keyword\">jpg</span><br><span class=\"hljs-keyword\"> </span>  ├── <span class=\"hljs-number\">02</span>.<span class=\"hljs-keyword\">jpg</span><br><span class=\"hljs-keyword\"> </span>  └── <span class=\"hljs-number\">03</span>.<span class=\"hljs-keyword\">jpg</span><br><span class=\"hljs-keyword\"> </span>  ...<br>   hexo 本地图片不显示.md<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>2. 安装插件 hexo-asset-image</p>\n</blockquote>\n<ul>\n<li>GitHub 地址 <a href=\"https://github.com/xcodebuild/hexo-asset-image\">hexo-asset-image</a></li>\n<li>npm 安装 (需要提前安装 Node.js)</li>\n</ul>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">npm install https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/CodeFalling/</span>hexo-asset-image --save<br></code></pre></td></tr></table></figure>\n<p><img src=\"/2021/04/09/hexo-%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/16179381622353.jpg\" alt=\"img\"></p>\n<p><font color=\"#FC1944\" size=\"5\" face=\"黑体\">注意！！！</font>请不要使用<font color=\"#E96B03\" size=\"4\" face=\"黑体\">npm install hexo-asset-image --save</font>这个命令安装，<font color=\"#FC1944\" size=\"5\" face=\"黑体\">版本号</font>不对</p>\n<p><img src=\"/2021/04/09/hexo-%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/16179386612344543.jpg\" alt=\"img\"></p>\n<blockquote>\n<p>3. 版本差异</p>\n</blockquote>\n<p>1.0.0.5 版本<br>\n<img src=\"/2021/04/09/hexo-%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_16179388154879.png\" alt=\"img\"></p>\n<p>1.0.0 版本<br>\n<img src=\"/2021/04/09/hexo-%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_16179388959401.png\" alt=\"img\"></p>\n<blockquote>\n<p>在 md 中书写格式（相对路径）</p>\n</blockquote>\n<p>在 md 使用如下形式引用图片</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs less\">!<span class=\"hljs-selector-attr\">[01]</span>(hexo 本地图片不显示/<span class=\"hljs-number\">01</span>.jpg)<br></code></pre></td></tr></table></figure>\n<p><font color=\"#FC1944\" size=\"5\" face=\"黑体\">注意 </font>这里要使用<font color=\"#E96B03\" size=\"4\" face=\"黑体\"> “/”</font></p>\n<blockquote>\n<p>md 文件名称和图片存放文件夹名称不同时</p>\n</blockquote>\n<p><font color=\"#FC1944\" size=\"5\" face=\"黑体\">注意 </font>重命名 md 文件之后记得重命名文件夹，当 md 文件的名称与文件夹名称不同时，映射关系以 md 文件名称为主。会导致 src 图片路径找不到</p>\n<p><img src=\"/2021/04/09/hexo-%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_16179391173106.png\" alt=\"img\"></p>\n<ul>\n<li>文件和文件夹以 url 中的名称保持一致</li>\n</ul>\n<h1 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h1>\n<ul>\n<li>检查<font color=\"#E96B03\" size=\"4\" face=\"黑体\">_config.yml</font>文件的<font color=\"#E96B03\" size=\"4\" face=\"黑体\">post_asset_folder:</font>选项是否为<font color=\"#E96B03\" size=\"4\" face=\"黑体\">true</font></li>\n<li>检查创建文件之后的目录结构</li>\n<li>检查<font color=\"#E96B03\" size=\"4\" face=\"黑体\">hexo-asset-image</font>插件的版本</li>\n<li>检查路径引用图片的路径使用<font color=\"#E96B03\" size=\"4\" face=\"黑体\"> /</font></li>\n<li>检查 md 文件的文件名称和图片存放文件夹名称是否相同</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2021/04/09/centos7%E5%AE%89%E8%A3%85Kafka/",
            "url": "http://example.com/2021/04/09/centos7%E5%AE%89%E8%A3%85Kafka/",
            "title": "centos7安装Kafka",
            "date_published": "2021-04-09T02:29:54.000Z",
            "content_html": "<h1 id=\"安装步骤\"><a class=\"markdownIt-Anchor\" href=\"#安装步骤\">#</a> 安装步骤</h1>\n<blockquote>\n<p>1. 更新系统</p>\n</blockquote>\n<p>对 centos 系统的软件进行一些更新或者升级，从而在进行安装的时候可以很快的找到安装包。</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">sudo yum install epel-<span class=\"hljs-keyword\">release</span> -y<br>sudo yum <span class=\"hljs-keyword\">update</span> -y　<br></code></pre></td></tr></table></figure>\n<p><img src=\"/2021/04/09/centos7%E5%AE%89%E8%A3%85Kafka/1617935617.png\" alt=\"img\"></p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2021/04/09/java%E4%B8%AD%E7%9A%84switch%E7%94%A8%E6%B3%95/",
            "url": "http://example.com/2021/04/09/java%E4%B8%AD%E7%9A%84switch%E7%94%A8%E6%B3%95/",
            "title": "java中的switch用法",
            "date_published": "2021-04-09T02:09:30.000Z",
            "content_html": "<h1 id=\"程序流程控制switch-case结构\"><a class=\"markdownIt-Anchor\" href=\"#程序流程控制switch-case结构\">#</a> 程序流程控制：switch-case 结构</h1>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">switch(表达式)&#123;<br>    case 常量<span class=\"hljs-number\">1</span>：<br>        语句<span class=\"hljs-number\">1</span>;<br>        <span class=\"hljs-regexp\">//</span> <span class=\"hljs-keyword\">break</span>;<br>    case 常量<span class=\"hljs-number\">2</span>:<br>        语句<span class=\"hljs-number\">2</span>;<br>        <span class=\"hljs-regexp\">//</span> <span class=\"hljs-keyword\">break</span>;<br>    case 常量N:<br>        语句N;<br>        <span class=\"hljs-regexp\">//</span><span class=\"hljs-keyword\">break</span>;<br>    default:<br>        语句;<br>        <span class=\"hljs-regexp\">//</span> <span class=\"hljs-keyword\">break</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><img src=\"/2021/04/09/java%E4%B8%AD%E7%9A%84switch%E7%94%A8%E6%B3%95/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_16179396445768.png\" alt=\"img\"></p>\n<h3 id=\"代码如下所示\"><a class=\"markdownIt-Anchor\" href=\"#代码如下所示\">#</a> 代码如下所示：</h3>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs arduino\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Test</span> &#123;</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">String</span>[] args)</span> </span>&#123;<br>        <span class=\"hljs-keyword\">int</span> number = <span class=\"hljs-number\">2</span>;<br>        <span class=\"hljs-built_in\"><span class=\"hljs-keyword\">switch</span></span> (number) &#123;<br>            <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                System.out.<span class=\"hljs-built_in\">println</span>(<span class=\"hljs-string\">&quot;当前匹配的是0&quot;</span>);<br>                <span class=\"hljs-keyword\">break</span>;<br>            <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">1</span>:<br>                System.out.<span class=\"hljs-built_in\">println</span>(<span class=\"hljs-string\">&quot;当前匹配的是1&quot;</span>);<br>                <span class=\"hljs-keyword\">break</span>;<br>            <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:<br>                System.out.<span class=\"hljs-built_in\">println</span>(<span class=\"hljs-string\">&quot;当前匹配的是2&quot;</span>);<br>                <span class=\"hljs-keyword\">break</span>;<br>            <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">3</span>:<br>                System.out.<span class=\"hljs-built_in\">println</span>(<span class=\"hljs-string\">&quot;当前匹配的是3&quot;</span>);<br>                <span class=\"hljs-keyword\">break</span>;<br>            <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">4</span>:<br>                System.out.<span class=\"hljs-built_in\">println</span>(<span class=\"hljs-string\">&quot;当前匹配的是4&quot;</span>);<br>                <span class=\"hljs-keyword\">break</span>;<br>            <span class=\"hljs-keyword\">default</span>:<br>                System.out.<span class=\"hljs-built_in\">println</span>(<span class=\"hljs-string\">&quot;什么都没匹配到&quot;</span>);<br>                <span class=\"hljs-keyword\">break</span>;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure>\n<h3 id=\"运行结果如下所示\"><a class=\"markdownIt-Anchor\" href=\"#运行结果如下所示\">#</a> 运行结果如下所示：</h3>\n<p><img src=\"/2021/04/09/java%E4%B8%AD%E7%9A%84switch%E7%94%A8%E6%B3%95/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_16179401593785.png\" alt=\"img\"></p>\n<blockquote>\n<p>总结说明</p>\n</blockquote>\n<ul>\n<li>根据 switch 表达式中的值，依次匹配各个 case 中的常量。一旦匹配成功，则进入相应 case 结构中，<br>\n调用其执行语句。当调用完执行语句以后，则任然继续向下执行其他 casej = 结构中的执行语句，直到遇到 brak 关键字或此 switch-case 结构末尾结束为止。</li>\n<li>break, 可以使用在 switch-case 结构中，表示一旦执行到此关键字，就跳出 switch-case 结构。</li>\n<li>switch-case 结构中的表达，只能是如下 6 种数据类型之一：byte, short, char, int, 枚举类型 (JDK5.0 候新增), String (JDK7.0 候新增)</li>\n<li>case 之后只能声明常量，不能声明范围。</li>\n<li>break 关键字是可选的。</li>\n<li>default: 相当于 if-else 结构中的 else.<br>\ndefault 结构是可选的</li>\n<li>如果 switch-case 结构中的多个 case 的执行语句相同，则可以考虑进行合并。</li>\n<li>凡是可以使用 switch-case 的结构，都可以转换为 if-else。反之，不成立。</li>\n<li>我们写分支结构的时候，当发现既可以使用 switch-case，（同时，switch 中表达式的取值情况不太多）。又可以使用 if-else 时，我们优先考虑选择使用 switch-case。原因使用 switch-case 的执行效率稍高。</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2021/04/08/fastDFS%E5%AE%89%E8%A3%85/",
            "url": "http://example.com/2021/04/08/fastDFS%E5%AE%89%E8%A3%85/",
            "title": "基于CentOS7安装fastDFS",
            "date_published": "2021-04-08T08:03:02.000Z",
            "content_html": "<p><font color=\"#E96B03\" size=\"2\" face=\"黑体\">fastDFS</font>是以 C 语言开发的一项开源轻量级分布式文件系统，他对文件进行管理，主要功能有：文件存储，文件同步，文件访问（文件上传 / 下载）, 特别适合以文件为载体的在线服务，如图片网站，视频网站等。</p>\n<blockquote>\n<p>适用范围</p>\n</blockquote>\n<ul>\n<li>含有<font color=\"#E96B03\" size=\"2\" face=\"黑体\">文件上传</font>功能的应用</li>\n<li>含有<font color=\"#E96B03\" size=\"2\" face=\"黑体\">文件下载</font>功能的应用</li>\n<li><font color=\"#E96B03\" size=\"2\" face=\"黑体\">分布式</font>应用（不在一台服务器上）</li>\n<li>上传结果：<font color=\"#E96B03\" size=\"2\" face=\"黑体\">/group1/M00/00/00/CmQCyl_EY2eAGDp1AACK3ZiQsLg494.png<br>\n</font></li>\n<li>支持<font color=\"#E96B03\" size=\"2\" face=\"黑体\">分布式存储</font></li>\n</ul>\n<h2 id=\"docker方式安装\"><a class=\"markdownIt-Anchor\" href=\"#docker方式安装\">#</a> Docker 方式安装</h2>\n<blockquote>\n<p>下载镜像</p>\n</blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">docker</span> pull delron/fastdfs<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>查看本地仓库</p>\n</blockquote>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">docker images</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>开启端口</p>\n</blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">firewall-cmd <span class=\"hljs-attribute\">--zone</span>=public  --permanent <span class=\"hljs-attribute\">--add-port</span>=8888/tcp<br>firewall-cmd <span class=\"hljs-attribute\">--zone</span>=public  --permanent <span class=\"hljs-attribute\">--add-port</span>=22122/tcp<br>firewall-cmd <span class=\"hljs-attribute\">--zone</span>=public  --permanent <span class=\"hljs-attribute\">--add-port</span>=23000/tcp<br></code></pre></td></tr></table></figure>\n<ul>\n<li>8888 http 访问端口</li>\n<li>22122 tracker 端口</li>\n<li>23000 storage 端口</li>\n</ul>\n<blockquote>\n<p>刷新端口</p>\n</blockquote>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ada\">firewall-cmd <span class=\"hljs-comment\">--reload</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>查看端口</p>\n</blockquote>\n<figure class=\"highlight brainfuck\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs brainfuck\"><span class=\"hljs-comment\">firewall</span><span class=\"hljs-literal\">-</span><span class=\"hljs-comment\">cmd</span> --<span class=\"hljs-comment\">zone=public</span> --<span class=\"hljs-comment\">list</span><span class=\"hljs-literal\">-</span><span class=\"hljs-comment\">ports</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>创建 tracker 容器</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">docker run -dti --network=host --name tracker -v <span class=\"hljs-regexp\">/data/</span>fastDfs<span class=\"hljs-regexp\">/tracker:/</span>var<span class=\"hljs-regexp\">/fdfs -v /</span>etc<span class=\"hljs-regexp\">/localtime:/</span>etc<span class=\"hljs-regexp\">/localtime delron/</span>fastdfs tracker<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>容器开机自启</p>\n</blockquote>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">docker <span class=\"hljs-keyword\">update</span> <span class=\"hljs-comment\">--restart=always tracker</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>增加 storage 可写权限</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">mkdir -p <span class=\"hljs-regexp\">/data/</span>fastDfs<span class=\"hljs-regexp\">/storage/</span>logs<br><br>chmod <span class=\"hljs-number\">777</span> <span class=\"hljs-regexp\">/data/</span>fastDfs<span class=\"hljs-regexp\">/storage/</span>logs<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>创建 storage 容器</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">docker run -dti --network=host --name storage -e TRACKER_SERVER=`<span class=\"hljs-number\">192.168</span>.<span class=\"hljs-number\">211.200</span>`:<span class=\"hljs-number\">22122</span> -v <span class=\"hljs-regexp\">/data/</span>fastDfs<span class=\"hljs-regexp\">/storage:/</span>var<span class=\"hljs-regexp\">/fdfs  -v /</span>etc<span class=\"hljs-regexp\">/localtime:/</span>etc<span class=\"hljs-regexp\">/localtime  delron/</span>fastdfs storage<br></code></pre></td></tr></table></figure>\n<p>其中<font color=\"#E96B03\" size=\"2\" face=\"黑体\"> 192.168.211.200</font>为内网 ip，需要修改</p>\n<blockquote>\n<p>容器开机自启</p>\n</blockquote>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">docker <span class=\"hljs-keyword\">update</span> <span class=\"hljs-comment\">--restart=always storage</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>测试</p>\n</blockquote>\n<ul>\n<li>测试成功后，说明上传已经可以了</li>\n</ul>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-comment\">## 进入容器</span><br>docker exec -it storage bash<br><br><span class=\"hljs-comment\">## 设置nginx</span><br>cd <span class=\"hljs-regexp\">/usr/</span>local<span class=\"hljs-regexp\">/nginx/</span>conf<br>vi nginx.conf<br><br><span class=\"hljs-comment\">## 测试上传</span><br>cd <span class=\"hljs-regexp\">/etc/</span>fdfs<br>echo hello=fuck&gt;a.txt<br><span class=\"hljs-comment\">## 上传</span><br><span class=\"hljs-regexp\">/usr/</span>bin<span class=\"hljs-regexp\">/fdfs_upload_file /</span>etc<span class=\"hljs-regexp\">/fdfs/</span>client.conf a.txt<br><br><span class=\"hljs-comment\">## 上传结果</span><br>group1<span class=\"hljs-regexp\">/M00/</span><span class=\"hljs-number\">00</span><span class=\"hljs-regexp\">/00/</span>wKjTyF9SW9qAejgfAAAAC9k-OCU699.txt<br><br><span class=\"hljs-comment\">## 重启storage</span><br>docker restart storage<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>nginx 配置</p>\n</blockquote>\n<ul>\n<li>记得开启<font color=\"#E96B03\" size=\"2\" face=\"黑体\">22122</font>对外端口权限，否则外网无法上传文件</li>\n<li>一般情况下，文件上传只在<font color=\"#E96B03\" size=\"2\" face=\"黑体\">服务器内部</font>进行</li>\n<li>最后需要配置 Nginx 配置，用来接收外网的访问</li>\n</ul>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">location</span> /group[<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">9</span>]/M00 &#123;<br>    <span class=\"hljs-comment\">## ip+端口为dfs内网ip+端口</span><br>    <span class=\"hljs-attribute\">proxy_pass</span>  http://10.100.2.130:8888;<br>    <span class=\"hljs-comment\">## 这里配置，可以自定义下载重命名</span><br>    <span class=\"hljs-attribute\">if</span> ($arg_attname <span class=\"hljs-regexp\">~* \\.(doc|docx|pdf|zip|rar|txt|jar)$)</span> &#123;<br>        <span class=\"hljs-attribute\">add_header</span> Content-Disposition <span class=\"hljs-string\">&quot;attachment;filename=$arg_attname&quot;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n",
            "tags": [
                "contos"
            ]
        },
        {
            "id": "http://example.com/2021/04/02/JDK%E5%AE%89%E8%A3%85/",
            "url": "http://example.com/2021/04/02/JDK%E5%AE%89%E8%A3%85/",
            "title": "JDK安装",
            "date_published": "2021-04-02T09:18:08.000Z",
            "content_html": "<h2 id=\"jdk安装\"><a class=\"markdownIt-Anchor\" href=\"#jdk安装\">#</a> JDK 安装</h2>\n<p>JDK 是<font color=\"#E96B03\" size=\"2\" face=\"黑体\">Java</font>语言的软件开发工具包，主要用于移动设备、嵌入式设备上的 java 应用程序。JDK 是整个 java 开发的核心，它包含了 JAVA 的运行环境（JVM+Java 系统类库）和 JAVA 工具。</p>\n<blockquote>\n<p>面以<font color=\"#E96B03\" size=\"2\" face=\"黑体\">常规安装方式</font>为例（CentOS 7 的环境）</p>\n</blockquote>\n<blockquote>\n<p>首先更新已安装的包</p>\n</blockquote>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">yum update</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>查看当前 java 版本</p>\n</blockquote>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs applescript\">java -<span class=\"hljs-built_in\">version</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>检查是否含有老版本</p>\n</blockquote>\n<p>进一步查询系统已经安装的 JDK</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vim\">rpm -<span class=\"hljs-keyword\">qa</span> | <span class=\"hljs-keyword\">grep</span> -E <span class=\"hljs-string\">&#x27;^(java|jdk)&#x27;</span><br></code></pre></td></tr></table></figure>\n<ul>\n<li>rpm -qa 代表查询所有已安装的 packages</li>\n<li>grep -E '^(java|jdk)' 为通过正则表达式来过滤输出中以 java 或者 jdk 开头的结果</li>\n<li>输出是这样的：<br>\n<img src=\"/2021/04/02/JDK%E5%AE%89%E8%A3%85/1617357158.jpg\" alt=\"image\"></li>\n</ul>\n<blockquote>\n<p>可以用以下命令删除老的 jdk</p>\n</blockquote>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">yum</span> remove java-<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">6</span>.<span class=\"hljs-number\">0</span>-openjdk<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>下载到 /your/path/data 文件夹中</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">mkdir <span class=\"hljs-regexp\">/your/</span>path/data<br>cd <span class=\"hljs-regexp\">/your/</span>path/data<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>从 oracle 官网下载 jdk</p>\n</blockquote>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs perl\">wget --<span class=\"hljs-keyword\">no</span>-cookies --<span class=\"hljs-keyword\">no</span>-check-certificate --header <span class=\"hljs-string\">&quot;Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie&quot;</span> <span class=\"hljs-string\">&quot;http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.rpm&quot;</span> -O <span class=\"hljs-string\">&quot;jdk-1.8.rpm&quot;</span><br></code></pre></td></tr></table></figure>\n<p>说明：新改版后的下载页面需要加上 cookie 头部才能用 wget 顺利下载，版本号可以在官网上浏览后自行选择。<br>\n官方地址：<a href=\"http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a></p>\n<blockquote>\n<p>wget 方式安装</p>\n</blockquote>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cmake\">yum -y <span class=\"hljs-keyword\">install</span> wget<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>安装 Java</p>\n</blockquote>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">rpm</span> -ivh jdk-<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">8</span>.rpm<br></code></pre></td></tr></table></figure>\n<p>说明：装好后，再次确认当前系统默认的 java 版本</p>\n<blockquote>\n<p>查看版本</p>\n</blockquote>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs applescript\">java -<span class=\"hljs-built_in\">version</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>设置环境变量</p>\n</blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-builtin-name\">export</span> <span class=\"hljs-attribute\">JAVA_HOME</span>=/usr/java/jdk1.8.0_131/<br><span class=\"hljs-builtin-name\">export</span> <span class=\"hljs-attribute\">PATH</span>=<span class=\"hljs-variable\">$PATH</span>:$JAVA_HOME<br>source /etc/profile<br><br>echo JAVA_HOME<br></code></pre></td></tr></table></figure>\n",
            "tags": [
                "java"
            ]
        },
        {
            "id": "http://example.com/2021/04/02/centos%E5%AE%89%E8%A3%85Docker/",
            "url": "http://example.com/2021/04/02/centos%E5%AE%89%E8%A3%85Docker/",
            "title": "基于CentOS7安装Docker",
            "date_published": "2021-04-02T08:03:02.000Z",
            "content_html": "<h2 id=\"docker安装\"><a class=\"markdownIt-Anchor\" href=\"#docker安装\">#</a> Docker 安装</h2>\n<p>Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的镜像中，然后发布到任何流行的 Linux 或 Windows 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。</p>\n<blockquote>\n<p>下面以 centos7 服务器为例</p>\n</blockquote>\n<blockquote>\n<p>下载安装</p>\n</blockquote>\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs livecodeserver\">curl -fsSL <span class=\"hljs-keyword\">https</span>://<span class=\"hljs-built_in\">get</span>.docker.com | bash -s docker <span class=\"hljs-comment\">--mirror Aliyun</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>启动 docker</p>\n</blockquote>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crmsh\">service docker <span class=\"hljs-literal\">start</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>查看安装信息</p>\n</blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">docker</span> <span class=\"hljs-literal\">info</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>配置镜像加速器</p>\n</blockquote>\n<p>您可以通过修改 daemon 配置文件 /etc/docker/daemon.json 来使用加速器，下面地址为自己申请的阿里云镜像仓库地址</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">vim <span class=\"hljs-regexp\">/etc/</span>docker/daemon.json<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\">&#123;<br>  <span class=\"hljs-attr\">&quot;registry-mirrors&quot;</span>: [<span class=\"hljs-string\">&quot;https://6khlzwla.mirror.aliyuncs.com&quot;</span>]<br>&#125;<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>重启 dcoker</p>\n</blockquote>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">service docker restart</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>设置开机自启动</p>\n</blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">systemctl <span class=\"hljs-builtin-name\">enable</span> docker<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>设置时间与时区</p>\n</blockquote>\n<figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs arcade\">echo <span class=\"hljs-string\">&#x27;Asia/Shanghai&#x27;</span> &gt; <span class=\"hljs-regexp\">/etc/</span>timezone<br><br>echo <span class=\"hljs-string\">&#x27;Asia/Shanghai&#x27;</span> &gt; <span class=\"hljs-regexp\">/etc/</span>timezone/timezone<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>宿主机时间修改为上海时间</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">cp -rf <span class=\"hljs-regexp\">/usr/</span>share<span class=\"hljs-regexp\">/zoneinfo/</span>Asia<span class=\"hljs-regexp\">/Shanghai /</span>etc/localtime<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>docler 常用命令</p>\n</blockquote>\n<figure class=\"highlight vala\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vala\"><span class=\"hljs-meta\">## 重启docker</span><br>docker restart 容器名称<br><span class=\"hljs-meta\">## 删除docker容器</span><br>docker container rm  &lt;container ID&gt;<br><br><span class=\"hljs-meta\">## 查看镜像</span><br>docker images<br><span class=\"hljs-meta\">## 查看镜像容器</span><br>docker ps<br>docker ps -a<br><span class=\"hljs-meta\">## 搜索镜像</span><br>docker search xxx<br><span class=\"hljs-meta\">## 查看日志</span><br>docker log -f 容器启动后生成唯一ID<br><span class=\"hljs-meta\">## 清理镜像</span><br>docker images|grep none|awk <span class=\"hljs-string\">&#x27;&#123;print $3&#125;&#x27;</span>|xargs docker rmi<br><br><span class=\"hljs-meta\">## 进入容器</span><br>docker exec -it 容器id bash<br><span class=\"hljs-meta\">## 清理内存</span><br>echo <span class=\"hljs-number\">1</span> &gt; /proc/sys/vm/drop_caches<br><br><span class=\"hljs-meta\"># 文件拷贝</span><br>docker cp 目录 容器名:目录<br>docker cp 容器名:目录 目录<br></code></pre></td></tr></table></figure>\n",
            "tags": [
                "docker"
            ]
        },
        {
            "id": "http://example.com/2021/04/02/hexo%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/",
            "url": "http://example.com/2021/04/02/hexo%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/",
            "title": "hexo快速入门",
            "date_published": "2021-04-02T01:39:53.119Z",
            "content_html": "<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo new <span class=\"hljs-string\">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo server<br></code></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo generate<br></code></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo deploy<br></code></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n",
            "tags": []
        }
    ]
}